plugins {
  id "io.spring.dependency-management" version "1.0.6.RELEASE"
  id "com.github.johnrengelman.shadow" version "4.0.0"
  id "net.ltgt.apt-eclipse" version "0.18"
  id "net.ltgt.apt-idea" version "0.18"
  id 'com.bmuschko.docker-remote-api' version '3.6.2'
}

apply plugin: "application"
apply plugin: "java"
apply plugin: 'eclipse'
apply plugin: 'idea'

ext {
  lombokVersion = '1.18.2'
}

version = '0.0.5'
sourceCompatibility = 1.8
group "factorial.service"

repositories {
  jcenter()
  mavenLocal()
  mavenCentral()
  maven { url "https://jcenter.bintray.com" }
}

docker {
  registryCredentials {
    username = (System.getenv('DOCKER_BUILDER_USERNAME') ?: (project.hasProperty('dockerRegistryUsername') ? dockerRegistryUsername : '')) ?: ''
    password = (System.getenv('DOCKER_BUILDER_PASSWORD') ?: (project.hasProperty('dockerRegistryPassword') ? dockerRegistryPassword : '')) ?: ''
  }
}

dependencyManagement {
  imports {
    mavenBom 'io.micronaut:bom:1.0.0.RC2'
  }
}

dependencies {
  compileOnly "org.projectlombok:lombok:${ lombokVersion }"
  annotationProcessor "org.projectlombok:lombok:${ lombokVersion }"
  annotationProcessor "io.micronaut:inject-java"
  annotationProcessor "io.micronaut:validation"
  compile "io.micronaut:http-client"
  compile "io.micronaut:http-server-netty"
  compile "io.micronaut:inject"
  compile "io.micronaut:validation"
  compile "io.micronaut:runtime"
  compile 'org.apache.commons:commons-math3:3.6.1'
  compileOnly "com.oracle.substratevm:svm:GraalVM-1.0.0-rc7"
  compileOnly "io.micronaut:inject-java"
  runtime "ch.qos.logback:logback-classic:1.2.3"
  runtime "io.micronaut:graal"
  testCompile "junit:junit:4.12"
  testCompile "io.micronaut:inject-java"
  testCompile "org.hamcrest:hamcrest-all:1.3"
}

task createDockerfile(type: com.bmuschko.gradle.docker.tasks.image.Dockerfile) {
  destFile = project.file('build/libs/Dockerfile')
  //from 'openjdk:8u181-jre-slim-stretch'
  from 'openjdk:8u171-jre-alpine3.8'
  maintainer 'Domingo Suarez Torres "domingo.suarez@gmail.com"'

  copyFile "${ project.name }-${ project.version.toLowerCase() }-all.jar", '/opt/service.jar'
  exposePort 8080
  entryPoint 'java', "-Djava.awt.headless=true", "-Xms128m", "-Xmx128m", '-jar', '/opt/service.jar'
}

task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
  dependsOn createDockerfile
  inputDir = createDockerfile.destFile.parentFile
  tag = 'domix/factorial-service:' + project.version.toLowerCase()
}

task pushImage(type: com.bmuschko.gradle.docker.tasks.image.DockerPushImage) {
  dependsOn buildImage
  imageName = buildImage.tag
}

createDockerfile.dependsOn assemble

shadowJar {
  mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "factorial.service.Application"
compileJava.options.compilerArgs += '-parameters'
compileTestJava.options.compilerArgs += '-parameters'
